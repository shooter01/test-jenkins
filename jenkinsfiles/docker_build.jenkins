#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master || built-in'
    }
    environment {
        tag = sh(returnStdout: true, script: 'git rev-parse -short=10 HEAD | tail -n +2')
        docker_tag = 'shooter12/testreactapp'
        docker_push_name = "${docker_tag}:${tag}"
    }
    triggers { pollSCM('* * * * *') }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage('docker login') {
            steps {
                echo ' ============== docker login =================='
                withCredentials(
                    [
                        usernamePassword(
                            credentialsId: 'dockerhub_id',
                            usernameVariable: 'USERNAME',
                            passwordVariable: 'PASSWORD')
                        ]
                    ) {
                        sh """
                        docker login -u $USERNAME -p $PASSWORD
                        """
                    }
            }
        }
        stage('create docker image') {
            steps {
                echo ' ============== start building image =================='
                sh "docker build . -t ${docker_push_name}"
            }
        }
        stage('push docker image') {
            steps {
                echo ' ============== start pushing image =================='
                sh "docker push ${docker_push_name}"
            }
        }
        stage('login server') {
            steps {
                echo ' ============== start loggining server =================='
                withCredentials(
                    [
                        usernamePassword(
                            credentialsId: 'kvz_id',
                            usernameVariable: 'USERNAME')
                        ]
                    ) {
                        sh """
                        ssh $USERNAME@root@213.159.209.3
                        """
                    }
            }
        }
    }
}
